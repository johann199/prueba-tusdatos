version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: miseventos_postgres
    environment:
      POSTGRES_USER: miseventos_user
      POSTGRES_PASSWORD: miseventos_2024
      POSTGRES_DB: mis_eventos_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U miseventos_user -d mis_eventos_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: miseventos_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@miseventos.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy 
    restart: unless-stopped

  
  backend:
    build:
      context: ./backend 
      dockerfile: Dockerfile
    container_name: miseventos_backend
    environment:
      DATABASE_URL: postgresql://miseventos_user:miseventos_2024@postgres:5432/mis_eventos_db
      SECRET_KEY: "tu_clave_secreta_super_secreta_y_larga_para_produccion"
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
    ports:
      - "8000:8000" 
    depends_on:
      postgres:
        condition: service_healthy 
    restart: unless-stopped
    # volumes: # Descomenta si necesitas hot-reloading para desarrollo, pero no para producci√≥n
    #   - ./backend:/app

  # Servicio del Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: miseventos_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
